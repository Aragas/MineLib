version: '3.7'

volumes:
  prometheus_data: {}
  grafana_data: {}
  postgresql_data: {}

networks:
  metrics:
  internal:

services:
#Network Bus
  nats:
    image: nats-streaming
    volumes:
      - ./nats/nats-server.conf:/opt/bitnami/nats/nats-server.conf
    ports:
      - 4222:4222
      #- 6222:6222
      #- 8222:8222
    networks:
      - internal

#Metrics
  grafana:
    image: grafana/grafana
    user: "104"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=foobar
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    networks:
      - metrics
  prometheus:
    image: prom/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    ports:
      - 9090:9090
    networks:
      - metrics
  prometheus.aragas_qserver_exporter:
    image: ${DOCKER_REGISTRY-}aragas_qserver_prometheus_exporter
    build:
      context: ../..
      dockerfile: Aragas.QServer.Prometheus.Exporter/Dockerfile
    depends_on:
      - nats
    networks:
      - internal
      - metrics
  prometheus.postgres_exporter:
    image: wrouesnel/postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://minelib:minelib@postgres:5432/?sslmode=disable"
    depends_on:
      - postgres
    networks:
      - internal
      - metrics
  prometheus.nats_exporter:
    image: synadia/prometheus-nats-exporter
    command: "-varz http://nats:8222"
    depends_on:
      - nats
    networks:
      - internal
      - metrics
  prometheus.docker_exporter:
    image: prometheusnet/docker_exporter
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - metrics

#Database
  postgres:
    image: postgres
    environment:
     POSTGRES_DB: minelib
     POSTGRES_USER: minelib
     POSTGRES_PASSWORD: minelib
    volumes:
      - postgresql_data:/var/lib/postgresql
    networks:
      - internal

#Bedrock to 1.15.1
#  geyser:
#    image: ${DOCKER_REGISTRY-}geyser
#    build:
#      context: ../..
#      dockerfile: MineLib/BedrockProxy/Dockerfile
#    depends_on:
#      - minelib.server.proxy
#    volumes:
#      - ./../BedrockProxy/config.yml:/app/config.yml
#    ports:
#      - 19132:19132
#    networks:
#      - internal

#Server
  minelib.server.entitybus:
    image: ${DOCKER_REGISTRY-}minelib_server_entitybus
    depends_on:
      - postgres
      - nats
    build:
      context: ../..
      dockerfile: MineLib/Executables/Bus/MineLib.Server.EntityBus/Dockerfile
    networks:
      - internal
  minelib.server.playerbus:
    image: ${DOCKER_REGISTRY-}minelib_server_playerbus
    build:
      context: ../..
      dockerfile: MineLib/Executables/Bus/MineLib.Server.PlayerBus/Dockerfile
    depends_on:
      - postgres
      - nats
    networks:
      - internal
  minelib.server.worldbus:
    image: ${DOCKER_REGISTRY-}minelib_server_worldbus
    build:
      context: ../..
      dockerfile: MineLib/Executables/Bus/MineLib.Server.WorldBus/Dockerfile
    depends_on:
      - postgres
      - nats
    networks:
      - internal

  minelib.server.proxy:
    image: ${DOCKER_REGISTRY-}minelib_server_proxy
    build:
      context: ../..
      dockerfile: MineLib/Executables/MineLib.Server.Proxy/Dockerfile
    depends_on:
      - nats
      - minelib.server.entitybus
      - minelib.server.playerbus
      - minelib.server.worldbus
    ports:
      - 25565:25565
    networks:
      - internal