<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <LangVersion>8.0</LangVersion>
    <Nullable>enable</Nullable>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DockerfileContext>..\..\..</DockerfileContext>
    <StartupObject>MineLib.Server.Proxy.Program</StartupObject>
  </PropertyGroup>

  <!--
  <ItemGroup Condition="$(DOTNET_RUNNING_IN_CONTAINER) == ''">
    <Analyzer Include="$(SolutionDir)\Third Party\Aragas.Network.Analyzer\Aragas.Network.Analyzer\bin\$(Configuration)\netstandard2.0\Aragas.Network.Analyzer.dll"/>
  </ItemGroup>
  -->
  
  <ItemGroup>
    <PackageReference Include="I18Next.Net" Version="0.7.1" />
    <PackageReference Include="I18Next.Net.Extensions" Version="0.7.1" />
    <PackageReference Include="Microsoft.Extensions.Hosting" Version="[3.1.*,)" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.9.10" />
  </ItemGroup>
  
  <ItemGroup>
    <ProjectReference Include="$(SolutionDir)\MineLib\Libraries\MineLib.Server.Core\MineLib.Server.Core.csproj" />
    <ProjectReference Include="$(SolutionDir)\MineLib\Libraries\Protocol\MineLib.Protocol\MineLib.Protocol.csproj" />
    <ProjectReference Include="$(SolutionDir)\MineLib\Libraries\Protocol\MineLib.Protocol.Netty\MineLib.Protocol.Netty.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Protocol\Classic\" />
    <Folder Include="Protocol\RakNet\" />

    <Content Include="appsettings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="appsettings.Development.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <DependentUpon>appsettings.json</DependentUpon>
    </Content>
    <Content Include="appsettings.Staging.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <DependentUpon>appsettings.json</DependentUpon>
    </Content>
    <Content Include="appsettings.Docker.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <DependentUpon>appsettings.json</DependentUpon>
    </Content>
    <Content Include="$(SolutionDir)\loggerconfig.json" Link="loggerconfig.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="$(SolutionDir)\loggerconfig.Development.json" Link="loggerconfig.Development.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <DependentUpon>loggerconfig.json</DependentUpon>
    </Content>
    
    <None Update="locales\en\translation.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="locales\ru\translation.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    
    <EmbeddedResource Include="logo-0.png" />
    <EmbeddedResource Include="logo-1.png">
      <DependentUpon>logo-0.png</DependentUpon>
    </EmbeddedResource>
  </ItemGroup>

</Project>
